/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   pipex.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: iatilla- <iatilla-@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/12/13 04:36:20 by iatilla-          #+#    #+#             */
/*   Updated: 2024/12/27 15:47:29 by iatilla-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "pipex.h"

void	execute_cmd(char *cmd, char **envp)
{
	char	*path;
	pipex	piper;

	path = get_right_path(envp);
	if (!path)
		exit(1);
	piper.cmd[0] = path;
	piper.cmd[1] = "-c";
	piper.cmd[2] = cmd;
	piper.cmd[3] = NULL;
	execve(path, piper.cmd, envp);
	perror("execve failed");
	free(path);
	exit(1);
}

int	main(int argc, char **av, char **envp)
{
	int		pid;
	int		shell_value;
	pipex	piper;

	shell_value = 2;
	if (argc < 5)
	{
		printf("Usage: %s <input_file> <cmd1> ... <output_file>\n", av[0]);
		return (1);
	}
	if (access(av[1], F_OK) == -1)
	{
		printf("Cannot access input file: %s\n", av[1]);
		return (1);
	}
	piper.previous = open(av[1], O_RDONLY);
	piper.output_fd = open(av[argc - 1], O_WRONLY | O_CREAT | O_TRUNC, 0644);
	while (shell_value != argc - 1)
	{
		if (pipe(piper.pipe) == -1)
		{
			perror("Pipe creation failed");
			return (-1);
		}
		pid = fork();
		if (pid == 0)
		{
			dup2(piper.previous, STDIN_FILENO);
			if (shell_value == argc - 2)
				dup2(piper.output_fd, STDOUT_FILENO);
			else
				dup2(piper.pipe[1], STDOUT_FILENO);
			close(piper.pipe[0]);
			close(piper.pipe[1]);
			close(piper.previous);
			execute_cmd(av[shell_value], envp);
		}
		if (pid > 0)
		{
			waitpid(pid, NULL, 0);
			dup2(piper.pipe[1], STDOUT_FILENO);
			close(piper.pipe[0]);
			close(piper.pipe[1]);
			piper.previous = piper.pipe[0];
		}
		shell_value++;
	}
	printf("Successfully written to %s\n", av[argc - 1]);
	while (wait(NULL) > 0)
		;
	close(piper.output_fd);
	return (0);
}
total 56
-rwxr-xr-x 1 iatilla- 2024_wolfsburg 19560 Dez 27 15:48 a.out
-rw-r--r-- 1 iatilla- 2024_wolfsburg  2841 Dez 18 16:07 NOTES.md
drwxr-xr-x 2 iatilla- 2024_wolfsburg  4096 Dez 27 12:03 outputs
-rw-r--r-- 1 iatilla- 2024_wolfsburg     2 Dez 27 08:07 test1
-rw-r--r-- 1 iatilla- 2024_wolfsburg  3744 Dez 27 12:03 test1.sh
-rw-r--r-- 1 iatilla- 2024_wolfsburg     6 Dez 27 08:12 test2
-rw-r--r-- 1 iatilla- 2024_wolfsburg    24 Dez 27 13:42 test2.out
-rwxr-xr-x 1 iatilla- 2024_wolfsburg    24 Dez 27 14:03 test3.out
-rw-r--r-- 1 iatilla- 2024_wolfsburg  2756 Dez 23 07:24 test_bonus.sh
-rw-r--r-- 1 iatilla- 2024_wolfsburg    24 Dez 27 13:43 testout
